{"ast":null,"code":"var _jsxFileName = \"/Users/leonardmelnik/Documents/reactapp/src/components/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [values, setValues] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchData();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //get Data\n\n  const fetchData = async () => {\n    const res = await fetch('http://localhost:8000');\n    const data = await res.json();\n    return data;\n  };\n\n  const sendTask = async task => {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(params)\n    };\n    const res = await fetch('http://localhost:8000');\n    const data = await res.json();\n    return data;\n  };\n\n  const onClick = () => {\n    if (document.getElementById('taskName').value && document.getElementById('taskSection').value) {\n      newTask = {\n        name: document.getElementById('taskName').value,\n        tag: document.getElementById('taskSection').value\n      };\n      sendTask(newTask);\n      setTasks([...tasks, {\n        name: document.getElementById('taskName').value,\n        tag: document.getElementById('taskSection').value\n      }]);\n    }\n  };\n\n  const onChange = () => {\n    console.log(document.getElementById('taskName').value);\n    console.log(document.getElementById('taskSection').value);\n  }; //Add how much energy a task will reqire as well estimated time\n  //If a task is monotonuous, low focus\n  //Ask steff about time energy table\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: onClick,\n      children: \"This is data: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"taskName\",\n      value: console.log(values),\n      onChange: onChange,\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"taskSection\",\n      value: console.log(values),\n      onChange: onChange,\n      placeholder: \"Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: console.log(values),\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n          task: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tasks, \"SStHlO/zadQVlgLohtWZ5xta6y8=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/leonardmelnik/Documents/reactapp/src/components/Tasks.js"],"names":["useState","useEffect","Task","Tasks","tasks","setTasks","values","setValues","getTasks","tasksFromServer","fetchData","res","fetch","data","json","sendTask","task","options","method","body","JSON","stringify","params","onClick","document","getElementById","value","newTask","name","tag","onChange","console","log","map"],"mappings":"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","sourcesContent":["\nimport { useState, useEffect } from 'react'\nimport Task from './Task';\n\nconst Tasks = () => {\n    const [tasks, setTasks] = useState([])\n    const [values, setValues] = useState([])\n\n    useEffect(() =>{\n       const getTasks = async () => {\n           const tasksFromServer = await fetchData()\n           setTasks(tasksFromServer)\n       }\n        getTasks()\n    }, [])\n    //get Data\n    const fetchData = async () => {\n        const res = await fetch('http://localhost:8000')\n        const data = await res.json()\n        return data\n    }\n    const sendTask = async (task) => {\n      const options = {\n        method: 'POST',\n        body: JSON.stringify( params )  \n    \n    };\n      const res = await fetch('http://localhost:8000')\n      const data = await res.json()\n      return data\n    }\n\n    const onClick = () => {\n      if(document.getElementById('taskName').value && document.getElementById('taskSection').value){\n        newTask = {name: document.getElementById('taskName').value, tag : document.getElementById('taskSection').value}\n        sendTask(newTask)\n        setTasks([\n          ...tasks, {name: document.getElementById('taskName').value, tag : document.getElementById('taskSection').value}\n      ]\n      )\n      }\n   \n    }\n    const onChange = () => {\n      console.log(document.getElementById('taskName').value)\n      console.log(document.getElementById('taskSection').value)\n\n      }\n    //Add how much energy a task will reqire as well estimated time\n    //If a task is monotonuous, low focus\n    //Ask steff about time energy table\n    return (\n        <div>\n        <h1 onClick = {onClick}>This is data: </h1>\n        <input id=\"taskName\" value={ console.log(values) }  onChange={ onChange } placeholder=\"Name\"></input>\n        <input id=\"taskSection\" value={ console.log(values) }  onChange={ onChange } placeholder=\"Section\"></input>\n        <input value={ console.log(values) }  onChange={ onChange }></input>\n        \n\n        <button onClick = {onClick}>Submit</button>\n\n        <table className=\"table table-striped\">\n      <thead>\n        <tr >\n          <th scope=\"col\">Topic</th>\n          <th scope=\"col\">Task</th>\n          <th scope=\"col\">Group</th>\n          <th scope=\"col\">Time</th>\n        </tr>\n      </thead>\n      <tbody>\n\n\n        {tasks.map((task) => (<Task task= { task }></Task>))}\n        \n        </tbody>\n        </table>\n            \n        </div>\n    )\n}\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}